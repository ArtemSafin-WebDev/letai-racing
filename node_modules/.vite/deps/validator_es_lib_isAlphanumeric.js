import {
  alphanumeric,
  assertString
} from "./chunk-2CCVXHZV.js";
import "./chunk-RSJERJUL.js";

// node_modules/validator/es/lib/isAlphanumeric.js
function isAlphanumeric(_str) {
  var locale = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "en-US";
  var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  assertString(_str);
  var str = _str;
  var ignore = options.ignore;
  if (ignore) {
    if (ignore instanceof RegExp) {
      str = str.replace(ignore, "");
    } else if (typeof ignore === "string") {
      str = str.replace(new RegExp("[".concat(ignore.replace(/[-[\]{}()*+?.,\\^$|#\\s]/g, "\\$&"), "]"), "g"), "");
    } else {
      throw new Error("ignore should be instance of a String or RegExp");
    }
  }
  if (locale in alphanumeric) {
    return alphanumeric[locale].test(str);
  }
  throw new Error("Invalid locale '".concat(locale, "'"));
}
var locales = Object.keys(alphanumeric);
export {
  isAlphanumeric as default,
  locales
};
//# sourceMappingURL=validator_es_lib_isAlphanumeric.js.map
